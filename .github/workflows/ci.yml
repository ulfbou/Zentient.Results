name: CI & Release

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Install GitVersion
        uses: GitTools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: '5.x'

      - name: Determine Semantic Version
        id: gitversion
        uses: GitTools/actions/gitversion/execute@v0.10.2

      # --- Linting steps commented out for now ---
      # - name: Setup Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '18'

      # - name: Lint commits
      #   uses: wagoid/commitlint-github-action@v5
      #   with:
      #     configFile: ./commitlint.config.js
      #     commit: ${{ github.event_name == 'push' && github.event.head_commit.message || github.event.pull_request.title }}
      #     failOnWarnings: false
      #     failOnErrors: true
      #     helpURL: https://github.com/conventional-changelog/commitlint/#what-is-commitlint
      # --- End of commented out linting steps ---

      - name: Restore dependencies
        run: dotnet restore Zentient.Results.sln

      - name: Build (Release)
        run: dotnet build Zentient.Results.sln -c Release /p:Version=${{ steps.gitversion.outputs.NuGetVersionV2 }}

      - name: Run Tests
        run: dotnet test Zentient.Results.sln --no-build --configuration Release

      - name: Pack NuGet Package
        run: dotnet pack Src/Results/Zentient.Results.csproj -c Release /p:Version=${{ steps.gitversion.outputs.NuGetVersionV2 }} --no-build

      - name: Publish NuGet Package
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/'))
        run: dotnet nuget push "**/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
